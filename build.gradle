buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.2'
        classpath 'org.ajoberstar:gradle-git:1.3.0'
        classpath 'org.kordamp.gradle:stats-gradle-plugin:0.2.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
        classpath 'net.nemerosa:versioning:2.5.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.10'
    }
}

import java.text.SimpleDateFormat
Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

apply plugin: 'base'
apply plugin: 'com.github.kt3k.coveralls'
apply from: 'gradle/idea.gradle'

allprojects {
    apply plugin: 'idea'
    apply plugin: 'org.kordamp.gradle.stats'
    apply plugin: 'com.github.ben-manes.versions'
}

subprojects {
    apply plugin: 'java'
    apply from: rootProject.file('gradle/publishing.gradle')
    apply from: rootProject.file('gradle/code-coverage.gradle')
    apply from: rootProject.file('gradle/code-quality.gradle')
    apply plugin: 'info.solidsoft.pitest'

    repositories {
        jcenter()
    }

    dependencies {
        testCompile 'junit:junit:4.12'
        testCompile 'org.hamcrest:hamcrest-all:1.3'
        testCompile 'pl.pragmatists:JUnitParams:1.0.5'
    }

    task sourcesJar(type: Jar) {
        group 'Build'
        description 'An archive of the source code'
        classifier 'sources'
        from sourceSets.main.allSource
    }

    jar.finalizedBy sourcesJar

    artifacts {
        sourcesJar
    }

    // check.dependsOn pitest
}